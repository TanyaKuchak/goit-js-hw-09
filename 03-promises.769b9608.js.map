{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAO,C,SAAEF,E,MAAUC,GACHE,KAAKC,SAE3B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAE3BC,YAAW,KACLA,WACFF,EAAQJ,GAERK,EAAOL,EAAK,GAEdD,EAAM,G,CAGCQ,SAASC,cAAc,SAC/BC,iBAAiB,UAEtB,SAA0BC,GACvBA,EAAMC,iBACP,MACEC,UAAYb,MAAAc,EAAKC,KAAEA,EAAIC,OAAEA,IACvBL,EAAMM,cAEV,IAAIC,EAAaC,OAAOL,EAAMM,OAC9B,MAAMC,EAAYF,OAAOJ,EAAKK,OACxBE,EAAcH,OAAOH,EAAOI,OAElC,IAAK,IAAIG,EAAW,EAAGA,GAAYD,EAAaC,GAAY,EAC1DzB,EAAcyB,EAAUT,GACrBU,MAAK,EAACzB,SAAEA,EAAQC,MAAEA,MACjBJ,EAAA6B,OAAOC,QAAQ,uBAAqB3B,QAAiBC,MAAU,IAEhE2B,OAAM,EAAC5B,SAAEA,EAAQC,MAAEA,MACnBJ,EAAA6B,OAAOG,QAAQ,sBAAoB7B,QAAeC,MAAU,IAE/DkB,GAAcG,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nfunction createPromise(position, delay) {\n  const data = { position, delay };\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n       \n    setTimeout(() => {\n      if (setTimeout) {\n        resolve(data);\n      } else {\n        reject(data);\n  }\n    },delay)\n  })\n}\nconst form = document.querySelector('.form');\nform.addEventListener('submit', onSubmitBtnClick);\n\nfunction onSubmitBtnClick(event) {\n   event.preventDefault();\n  const {\n    elements: { delay, step, amount },\n  } = event.currentTarget;\n\n  let delayValue = Number(delay.value);\n  const stepValue = Number(step.value);\n  const amountValue = Number(amount.value);\n\n  for (let position = 1; position <= amountValue; position += 1) {\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n       Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      })\n    delayValue += stepValue\n  }\n}\n\n\n\n\n// const onSuccess = value => {\n//   console.log('Success!', value);\n// };\n// const onError =value => {\n//   console.log('Error!', value);\n// };\n// let number = null;\n// const isSuccess = true;\n// const promise = new Promise((resolve, reject) => {\n//   if (isSuccess) {\n//     resolve(21);\n//     setTimeout(() => {\n//       console.log('in timeout');\n//       resolve(55);\n//     },1000)\n//   } else {\n//     reject(34);\n//   }\n// });\n// promise.then(onSuccess).catch(onError).finally(data => {\n//   console.log('finaly');\n// });\n\n// const promise = new Promise((resolve, reject) => {\n//   resolve('1');\n// });\n// promise.then(data => {\n//   console.log(data);\n//   return data;\n// })\n//   .then(data => {\n//     console.log(data);\n//     if (!data) {\n//       throw new Error('Error in then!');\n//     }\n//     return '2';\n//   })\n//   .then(data => {\n//     console.log(data);\n//     return '2';\n//   })\n//   .catch(error => {\n//     console.log(error.message);\n//   });\n\n\n\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","data","Math","random","Promise","resolve","reject","setTimeout","document","querySelector","addEventListener","event","preventDefault","elements","delay1","step","amount","currentTarget","delayValue","Number","value","stepValue","amountValue","position1","then","Notify","success","catch","failure"],"version":3,"file":"03-promises.769b9608.js.map"}