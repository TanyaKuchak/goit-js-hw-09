{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEA,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAO,CAAEF,WAAUC,SACHE,KAAKC,SAE3B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAE3BC,YAAW,WACLA,WACFF,EAAQJ,GAERK,EAAOL,E,GAETD,E,IAGOQ,SAASC,cAAc,SAC/BC,iBAAiB,UAEtB,SAA0BC,GACvBA,EAAMC,iBASP,IARA,IAEuBC,EAAnBF,EAAMG,cADRC,SAAYC,EAAKH,EAALb,MAAOiB,EAAIJ,EAAJI,KAAMC,EAAML,EAANK,OAIrBC,GADWC,OAAOJ,EAAMK,OACZD,OAAOH,EAAKI,QACxBC,EAAcF,OAAOF,EAAOG,OAEzBE,EAAW,EAAGA,GAAYD,EAAaC,GAAY,EAC1DzB,EAAcyB,EAAUP,GACrBQ,MAAK,SAAAC,G,IAAG1B,EAAQ0B,EAAR1B,SAAUC,EAAKyB,EAALzB,MACjBJ,EAAA8B,OAAOC,QAAQ,uBAAwCC,OAAf7B,EAAS,QAAY6B,OAAN5B,EAAM,M,IAE9D6B,OAAM,SAAAJ,G,IAAG1B,EAAQ0B,EAAR1B,SAAUC,EAAKyB,EAALzB,MACnBJ,EAAA8B,OAAOI,QAAQ,sBAAqCF,OAAf7B,EAAS,QAAY6B,OAAN5B,EAAM,M,IAE/CmB,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nfunction createPromise(position, delay) {\n  const data = { position, delay };\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n       \n    setTimeout(() => {\n      if (setTimeout) {\n        resolve(data);\n      } else {\n        reject(data);\n  }\n    },delay)\n  })\n}\nconst form = document.querySelector('.form');\nform.addEventListener('submit', onSubmitBtnClick);\n\nfunction onSubmitBtnClick(event) {\n   event.preventDefault();\n  const {\n    elements: { delay, step, amount },\n  } = event.currentTarget;\n\n  let delayValue = Number(delay.value);\n  const stepValue = Number(step.value);\n  const amountValue = Number(amount.value);\n\n  for (let position = 1; position <= amountValue; position += 1) {\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n       Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      })\n    delayValue += stepValue\n  }\n}\n\n\n\n\n// const onSuccess = value => {\n//   console.log('Success!', value);\n// };\n// const onError =value => {\n//   console.log('Error!', value);\n// };\n// let number = null;\n// const isSuccess = true;\n// const promise = new Promise((resolve, reject) => {\n//   if (isSuccess) {\n//     resolve(21);\n//     setTimeout(() => {\n//       console.log('in timeout');\n//       resolve(55);\n//     },1000)\n//   } else {\n//     reject(34);\n//   }\n// });\n// promise.then(onSuccess).catch(onError).finally(data => {\n//   console.log('finaly');\n// });\n\n// const promise = new Promise((resolve, reject) => {\n//   resolve('1');\n// });\n// promise.then(data => {\n//   console.log(data);\n//   return data;\n// })\n//   .then(data => {\n//     console.log(data);\n//     if (!data) {\n//       throw new Error('Error in then!');\n//     }\n//     return '2';\n//   })\n//   .then(data => {\n//     console.log(data);\n//     return '2';\n//   })\n//   .catch(error => {\n//     console.log(error.message);\n//   });\n\n\n\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","data","Math","random","Promise","resolve","reject","setTimeout","document","querySelector","addEventListener","event","preventDefault","_elements","currentTarget","elements","delay1","step","amount","stepValue","Number","value","amountValue","position1","then","param","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.c2b984d2.js.map"}